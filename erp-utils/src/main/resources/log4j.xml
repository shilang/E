<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE log4j:configuration PUBLIC "-//LOGGER" "log4j.dtd">

<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/'>
    
    <appender name="console" class="org.apache.log4j.ConsoleAppender">
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%d{dd HH:mm:ss,SSS\} %-5p] [%t] %c{2\} - %m%n"/>
        </layout>
        <filter class="org.apache.log4j.varia.LevelRangeFilter">
            <param name="levelMin" value="debug"/>
            <param name="levelMax" value="warn"/>
            <param name="AcceptOnMatch" value="true" />
        </filter>
    </appender>
    
<!--   log4j定义了8个级别的log（除去OFF和ALL，可以说分为6个级别），
     优先级从高到低依次为：OFF、FATAL、ERROR、WARN、INFO、DEBUG、TRACE、 ALL。
     如果将log level设置在某一个级别上，那么比此级别优先级高的log都能打印出来。
     例如，如果设置优先级为WARN，那么OFF、FATAL、ERROR、WARN 4个级别的log能正常输出，
     而INFO、DEBUG、TRACE、 ALL级别的log则会被忽略。从我们实验的结果可以看出，log4j默认的优先级为ERROR或者WARN（实际上是ERROR）。 -->
    
    <root>
        <level value="info"></level>
        <appender-ref ref="console"/>
    </root>
    
</log4j:configuration>