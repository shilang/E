<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>cloud erp</display-name>
  <description>ORBITA cloud erp</description>
  
  <welcome-file-list>
  	<welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <session-config>
  	<!-- Default to 30 minute session timeouts, minute as unit-->
    <session-timeout>480</session-timeout>
  </session-config>
  
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext.xml</param-value>
  </context-param>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  <filter>
    <filter-name>shiroFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetFilterLifecycle</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  
  <filter>
  	<filter-name>sessionFilter</filter-name>
  	<filter-class>com.cloud.erp.filter.SessionFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>openSessionInViewFilter</filter-name>
    <filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
    <init-param>
      <param-name>singleSession</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>struts2</filter-name>
    <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  
  <filter>
    <filter-name>druidWebStatFilter</filter-name>
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
    <init-param>
      <param-name>exclusions</param-name>
      <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*</param-value>
    </init-param>
    <init-param>
      <param-name>principalSessionName</param-name>
      <param-value>sessionInfo</param-value>
    </init-param>
  </filter>
  
  <filter-mapping>
    <filter-name>openSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
  	<filter-name>sessionFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>shiroFilter</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>struts2</filter-name>
    <url-pattern>*.action</url-pattern>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>druidWebStatFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
	<!-- The front controller of this Spring Web application, responsible for handling all application requests -->
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    	<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Map all requests to the DispatcherServlet for handling -->
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
  
  <!-- 
  <servlet>
    <servlet-name>kaptcha</servlet-name>
    <servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
    <init-param>
      <description> Border around kaptcha. Legal values are yes or no. </description>
      <param-name>kaptcha.border</param-name>
      <param-value>no</param-value>
    </init-param>
    <init-param>
      <description>Color of the border. Legal values are r,g,b (and optional alpha) or white,black,blue. </description>
      <param-name>kaptcha.border.color</param-name>
      <param-value>red</param-value>
    </init-param>
    <init-param>
      <description>Thickness of the border around kaptcha. Legal values are > 0. </description>
      <param-name>kaptcha.border.thickness</param-name>
      <param-value>5</param-value>
    </init-param>
    <init-param>
      <description>Width in pixels of the kaptcha image. </description>
      <param-name>kaptcha.image.width</param-name>
      <param-value>85</param-value>
    </init-param>
    <init-param>
      <description>Height in pixels of the kaptcha image. </description>
      <param-name>kaptcha.image.height</param-name>
      <param-value>35</param-value>
    </init-param>
    <init-param>
      <description>The image producer. </description>
      <param-name>kaptcha.producer.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.DefaultKaptcha </param-value>
    </init-param>
    <init-param>
      <description>The text producer. </description>
      <param-name>kaptcha.textproducer.impl</param-name>
      <param-value>com.google.code.kaptcha.text.impl.DefaultTextCreator</param-value>
    </init-param>
    <init-param>
      <description>The characters that will create the kaptcha. </description>
      <param-name>kaptcha.textproducer.char.string</param-name>
      <param-value>abcde2345678gfynmnpwx </param-value>
    </init-param>
    <init-param>
      <description>The number of characters to display. </description>
      <param-name>kaptcha.textproducer.char.length</param-name>
      <param-value>4</param-value>
    </init-param>
    <init-param>
      <description>A list of comma separated font names.</description>
      <param-name>kaptcha.textproducer.font.names</param-name>
      <param-value>Arial, Courier</param-value>
    </init-param>
    <init-param>
      <description>The size of the font to use. </description>
      <param-name>kaptcha.textproducer.font.size</param-name>
      <param-value>23</param-value>
    </init-param>
    <init-param>
      <description>The color to use for the font. Legal values are r,g,b. </description>
      <param-name>kaptcha.textproducer.font.color</param-name>
      <param-value>black</param-value>
    </init-param>
    <init-param>
      <description>The noise producer. </description>
      <param-name>kaptcha.noise.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.NoNoise </param-value>
    </init-param>
    <init-param>
      <description>The noise color. Legal values are r,g,b. </description>
      <param-name>kaptcha.noise.color</param-name>
      <param-value>black</param-value>
    </init-param>
    <init-param>
      <description>The obscurificator implementation. </description>
      <param-name>kaptcha.obscurificator.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
    </init-param>
    <init-param>
      <description>The background implementation. </description>
      <param-name>kaptcha.background.impl</param-name>
      <param-value>com.google.code.kaptcha.impl.DefaultBackground</param-value>
    </init-param>
    <init-param>
      <description>Ending background color. Legal values are r,g,b. </description>
      <param-name>kaptcha.background.clear.to</param-name>
      <param-value>white</param-value>
    </init-param>
  </servlet>  -->
  
  <servlet>
    <servlet-name>druidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
  </servlet>
  
  <!-- 
  <servlet-mapping>
    <servlet-name>kaptcha</servlet-name>
    <url-pattern>/Kaptcha.jpg</url-pattern>
  </servlet-mapping>
   -->
  
  <servlet-mapping>
    <servlet-name>druidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
  </servlet-mapping>
  
  <error-page>
    <error-code>404</error-code>
    <location>/error/404.jsp</location>
  </error-page>
  
  <error-page>
    <error-code>500</error-code>
    <location>/error/500.jsp</location>
  </error-page>
  
</web-app>